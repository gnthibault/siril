#!/bin/bash

HERE="$(dirname "$(readlink -f "${0}")")"

# Custom AppRun script for Siril

############################################################################################
# Allow AppRun or the AppImage to be symlinked to, e.g.,
############################################################################################

if [ ! -z $APPIMAGE ] ; then
  BINARY_NAME=$(basename "$ARGV0")
else
  BINARY_NAME=$(basename "$0")
fi
if [ ! -z "$1" ] && [ -e "$HERE/usr/bin/$1" ] ; then
  MAIN="$HERE/usr/bin/$1" ; shift
elif [ -e "$HERE/usr/bin/$BINARY_NAME" ] ; then
  MAIN="$HERE/usr/bin/$BINARY_NAME"
else
  MAIN="$HERE/usr/bin/siril"
fi

############################################################################################
# Prefer to run the bundled executables (e.g., Python)
############################################################################################

export PATH="${HERE}/usr/bin:${PATH}"

############################################################################################
# Run experimental bundle that bundles everything if a private ld-linux-x86-64.so.2 is there
############################################################################################

if [ -e "$HERE/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2" ] ; then
  echo "Run experimental bundle that bundles everything"
  export GCONV_PATH="$HERE/usr/lib/x86_64-linux-gnu/gconv"
  export FONTCONFIG_FILE="$HERE/etc/fonts/fonts.conf"
  export LIBRARY_PATH="$HERE/usr/lib":$LIBRARY_PATH
  export LIBRARY_PATH="$HERE/lib":$LIBRARY_PATH
  export LIBRARY_PATH="$HERE/usr/lib/i386-linux-gnu":$LIBRARY_PATH
  export LIBRARY_PATH="$HERE/lib/i386-linux-gnu":$LIBRARY_PATH
  export LIBRARY_PATH="$HERE/usr/lib/i386-linux-gnu/pulseaudio":$LIBRARY_PATH
  export LIBRARY_PATH="$HERE/usr/lib/i386-linux-gnu/alsa-lib":$LIBRARY_PATH
  export LIBRARY_PATH="$HERE/usr/lib/x86_64-linux-gnu":$LIBRARY_PATH
  export LIBRARY_PATH="$HERE/lib/x86_64-linux-gnu":$LIBRARY_PATH
  export LIBRARY_PATH="$HERE/usr/lib/x86_64-linux-gnu/pulseaudio":$LIBRARY_PATH
  export LIBRARY_PATH="$HERE/usr/lib/x86_64-linux-gnu/alsa-lib":$LIBRARY_PATH
  export GTK_EXE_PREFIX="$HERE/usr"
  export GDK_PIXBUF_MODULEDIR=$(readlink -f "$HERE"/usr/lib/x86_64-linux-gnu/gdk-pixbuf-*/*/loaders/ )
  export GDK_PIXBUF_MODULE_FILE=$(readlink -f "$HERE"/usr/lib/x86_64-linux-gnu/gdk-pixbuf-*/*/loaders.cache ) # Patched to contain no paths
  export GI_TYPELIB_PATH="${HERE}/usr/lib/x86_64-linux-gnu/girepository-1.0"
  export LIBRARY_PATH=$GDK_PIXBUF_MODULEDIR:$LIBRARY_PATH # Otherwise getting "Unable to load image-loading module"
  export LD_LIBRARY_PATH="$LIBRARY_PATH" # Required for python-gtk (pixbuf shared libs)
  exec "${HERE}/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2" --inhibit-cache --library-path "${LIBRARY_PATH}" "${MAIN}" "$@"
else
  exec "${MAIN}" "$@"
fi

