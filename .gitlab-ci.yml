stages:
  - siril

## GNU/Linux 64-bit CIs ##
 
.siril-debian/testing-base:
  image: debian:testing
  stage: siril
  variables:
    GIT_DEPTH: "1"
    INSTALL_DIR: "_install"
    INSTALL_PREFIX: "${CI_PROJECT_DIR}/${INSTALL_DIR}"
    GIT_SUBMODULE_STRATEGY: recursive
  artifacts:
    expire_in: 1 week
    when: always
    name: "app-build-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    paths:
    - _build
    #- "${INSTALL_DIR}"
  before_script:
    - apt-get update
    - apt-get install -y --no-install-recommends
        build-essential
        cmake
        desktop-file-utils
        hicolor-icon-theme
        git
        intltool
        libexiv2-dev
        libgtk-3-dev
        libcfitsio-dev
        libfftw3-dev
        libgsl-dev
        libconfig-dev
        libopencv-dev
        librsvg2-dev
        libraw-dev
        libffms2-dev
        libtiff-dev
        libjpeg-dev
        libheif-dev
        libpng-dev
        libavformat-dev
        libavutil-dev
        libavcodec-dev
        libswscale-dev
        libswresample-dev
        libcurl4-gnutls-dev
    - export PKG_CONFIG_PATH="${INSTALL_PREFIX}/lib/pkgconfig:${INSTALL_PREFIX}/share/pkgconfig"
    - export PKG_CONFIG_PATH="${INSTALL_PREFIX}/lib/`gcc -print-multiarch`/pkgconfig/:$PKG_CONFIG_PATH"
    - export PKG_CONFIG_PATH="${INSTALL_PREFIX}/share/`gcc -print-multiarch`/pkgconfig/:$PKG_CONFIG_PATH"
    - export LD_LIBRARY_PATH="${INSTALL_PREFIX}/lib:${LD_LIBRARY_PATH}"
    - export LD_LIBRARY_PATH="${INSTALL_PREFIX}/lib/`gcc -print-multiarch`:$LD_LIBRARY_PATH"
    - export XDG_DATA_DIRS="${INSTALL_PREFIX}/share:/usr/local/share:/usr/share"
    - export PATH="${INSTALL_PREFIX}/bin:$PATH"

siril-debian/testing-autotools:
  extends: .siril-debian/testing-base
  script:
    - mkdir _build
    - cd _build
    - ../autogen.sh
        --prefix="${INSTALL_PREFIX}"
    - cp -r ../deps .
    - make -j "$(nproc)"
    # - make check

flatpak:
  # Update the image URL whenever the runtime version in the flatpak manifest is changed
  image: 'registry.gitlab.gnome.org/gnome/gnome-runtime-images/gnome:3.34'
  stage: 'siril'
  variables:
    MANIFEST_PATH: "build/flatpak/org.free_astro.siril.json"
    FLATPAK_MODULE: "siril"
    APP_ID: "org.free_astro.siril"
    RUNTIME_REPO: "https://flathub.org/repo/flathub.flatpakrepo"
    BUNDLE: "org.free_astro.siril.flatpak"
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - flatpak-builder --stop-at=${FLATPAK_MODULE} flatpak_app ${MANIFEST_PATH} 1>/dev/null
    # Make sure to keep this in sync with the Flatpak manifest, all arguments
    # are passed except the config-args because we build it ourselves
    - flatpak build flatpak_app ./autogen.sh --prefix=/app
    - flatpak build flatpak_app make
    - flatpak build flatpak_app make install
    - flatpak-builder --finish-only --repo=repo ${BRANCH:+--default-branch=$BRANCH} flatpak_app ${MANIFEST_PATH}
    # TODO: Run automatic tests inside the Flatpak env 
    # - >
    #   xvfb-run -a -s "-screen 0 1024x768x24"
    #   flatpak build
    #   --env=LANG=C.UTF-8
    #   --env=NO_AT_BRIDGE=1
    #   ${TEST_BUILD_ARGS}
    #   flatpak_app
    #   dbus-run-session
    #   meson test -C _build --no-stdsplit --print-errorlogs ${TEST_RUN_ARGS}

    # Generate a Flatpak bundle
    - flatpak build-bundle repo ${BUNDLE} --runtime-repo=${RUNTIME_REPO} ${APP_ID} ${BRANCH}
  artifacts:
    name: 'Flatpak artifacts'
    expose_as: 'Get Flatpak bundle here'
    when: 'always'
    paths:
      - "${BUNDLE}"
      - 'repo/'
    expire_in: 1 week
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - '.flatpak-builder/downloads'
      - '.flatpak-builder/git'

